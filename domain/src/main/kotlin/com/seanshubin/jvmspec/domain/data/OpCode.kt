package com.seanshubin.jvmspec.domain.data

import com.seanshubin.jvmspec.domain.util.DataFormat.asHex
import java.util.Locale.getDefault

enum class OpCode(val ubyte: UByte, val operandType: OperandType) {
    AALOAD(0x32u, OperandType.NONE),
    AASTORE(0x53u, OperandType.NONE),
    ACONST_NULL(0x01u, OperandType.NONE),
    ALOAD(0x19u, OperandType.LOCAL_VARIABLE_INDEX),
    ALOAD_0(0x2au, OperandType.NONE),
    ALOAD_1(0x2bu, OperandType.NONE),
    ALOAD_2(0x2cu, OperandType.NONE),
    ALOAD_3(0x2du, OperandType.NONE),
    ANEWARRAY(0xbdu, OperandType.CONSTANT_POOL_INDEX),
    ARETURN(0xb0u, OperandType.NONE),
    ARRAYLENGTH(0xbeu, OperandType.NONE),
    ASTORE(0x3au, OperandType.LOCAL_VARIABLE_INDEX),
    ASTORE_0(0x4bu, OperandType.NONE),
    ASTORE_1(0x4cu, OperandType.NONE),
    ASTORE_2(0x4du, OperandType.NONE),
    ASTORE_3(0x4eu, OperandType.NONE),
    ATHROW(0xbfu, OperandType.NONE),
    BALOAD(0x33u, OperandType.NONE),
    BASTORE(0x54u, OperandType.NONE),
    BIPUSH(0x10u, OperandType.BYTE),
    CALOAD(0x34u, OperandType.NONE),
    CASTORE(0x55u, OperandType.NONE),
    CHECKCAST(0xc0u, OperandType.CONSTANT_POOL_INDEX),
    D2F(0x90u, OperandType.NONE),
    D2I(0x8eu, OperandType.NONE),
    D2L(0x8fu, OperandType.NONE),
    DADD(0x63u, OperandType.NONE),
    DALOAD(0x31u, OperandType.NONE),
    DASTORE(0x52u, OperandType.NONE),
    DCMPG(0x98u, OperandType.NONE),
    DCMPL(0x97u, OperandType.NONE),
    DCONST_0(0x0eu, OperandType.NONE),
    DCONST_1(0x0fu, OperandType.NONE),
    DDIV(0x6fu, OperandType.NONE),
    DLOAD(0x18u, OperandType.LOCAL_VARIABLE_INDEX),
    DLOAD_0(0x26u, OperandType.NONE),
    DLOAD_1(0x27u, OperandType.NONE),
    DLOAD_2(0x28u, OperandType.NONE),
    DLOAD_3(0x29u, OperandType.NONE),
    DMUL(0x6bu, OperandType.NONE),
    DNEG(0x77u, OperandType.NONE),
    DREM(0x73u, OperandType.NONE),
    DRETURN(0xafu, OperandType.NONE),
    DSTORE(0x39u, OperandType.LOCAL_VARIABLE_INDEX),
    DSTORE_0(0x47u, OperandType.NONE),
    DSTORE_1(0x48u, OperandType.NONE),
    DSTORE_2(0x49u, OperandType.NONE),
    DSTORE_3(0x4au, OperandType.NONE),
    DSUB(0x67u, OperandType.NONE),
    DUP(0x59u, OperandType.NONE),
    DUP_X1(0x5au, OperandType.NONE),
    DUP_X2(0x5bu, OperandType.NONE),
    DUP2(0x5cu, OperandType.NONE),
    DUP2_X1(0x5du, OperandType.NONE),
    DUP2_X2(0x5eu, OperandType.NONE),
    F2D(0x8du, OperandType.NONE),
    F2I(0x8bu, OperandType.NONE),
    F2L(0x8cu, OperandType.NONE),
    FADD(0x62u, OperandType.NONE),
    FALOAD(0x30u, OperandType.NONE),
    FASTORE(0x51u, OperandType.NONE),
    FCMPG(0x96u, OperandType.NONE),
    FCMPL(0x95u, OperandType.NONE),
    FCONST_0(0x0bu, OperandType.NONE),
    FCONST_1(0x0cu, OperandType.NONE),
    FCONST_2(0x0du, OperandType.NONE),
    FDIV(0x6eu, OperandType.NONE),
    FLOAD(0x17u, OperandType.LOCAL_VARIABLE_INDEX),
    FLOAD_0(0x22u, OperandType.NONE),
    FLOAD_1(0x23u, OperandType.NONE),
    FLOAD_2(0x24u, OperandType.NONE),
    FLOAD_3(0x25u, OperandType.NONE),
    FMUL(0x6au, OperandType.NONE),
    FNEG(0x76u, OperandType.NONE),
    FREM(0x72u, OperandType.NONE),
    FRETURN(0xaeu, OperandType.NONE),
    FSTORE(0x38u, OperandType.LOCAL_VARIABLE_INDEX),
    FSTORE_0(0x43u, OperandType.NONE),
    FSTORE_1(0x44u, OperandType.NONE),
    FSTORE_2(0x45u, OperandType.NONE),
    FSTORE_3(0x46u, OperandType.NONE),
    FSUB(0x66u, OperandType.NONE),
    GETFIELD(0xb4u, OperandType.CONSTANT_POOL_INDEX),
    GETSTATIC(0xb2u, OperandType.CONSTANT_POOL_INDEX),
    GOTO(0xa7u, OperandType.BRANCH_OFFSET),
    GOTO_W(0xc8u, OperandType.BRANCH_OFFSET_WIDE),
    I2B(0x91u, OperandType.NONE),
    I2C(0x92u, OperandType.NONE),
    I2D(0x87u, OperandType.NONE),
    I2F(0x86u, OperandType.NONE),
    I2L(0x85u, OperandType.NONE),
    I2S(0x93u, OperandType.NONE),
    IADD(0x60u, OperandType.NONE),
    IALOAD(0x2eu, OperandType.NONE),
    IAND(0x7eu, OperandType.NONE),
    IASTORE(0x4fu, OperandType.NONE),
    ICONST_M1(0x02u, OperandType.NONE),
    ICONST_0(0x03u, OperandType.NONE),
    ICONST_1(0x04u, OperandType.NONE),
    ICONST_2(0x05u, OperandType.NONE),
    ICONST_3(0x06u, OperandType.NONE),
    ICONST_4(0x07u, OperandType.NONE),
    ICONST_5(0x08u, OperandType.NONE),
    IDIV(0x6cu, OperandType.NONE),
    IF_ACMPEQ(0xa5u, OperandType.BRANCH_OFFSET),
    IF_ACMPNE(0xa6u, OperandType.BRANCH_OFFSET),
    IF_ICMPEQ(0x9fu, OperandType.BRANCH_OFFSET),
    IF_ICMPNE(0xa0u, OperandType.BRANCH_OFFSET),
    IF_ICMPLT(0xa1u, OperandType.BRANCH_OFFSET),
    IF_ICMPGE(0xa2u, OperandType.BRANCH_OFFSET),
    IF_ICMPGT(0xa3u, OperandType.BRANCH_OFFSET),
    IF_ICMPLE(0xa4u, OperandType.BRANCH_OFFSET),
    IFEQ(0x99u, OperandType.BRANCH_OFFSET),
    IFNE(0x9au, OperandType.BRANCH_OFFSET),
    IFLT(0x9bu, OperandType.BRANCH_OFFSET),
    IFGE(0x9cu, OperandType.BRANCH_OFFSET),
    IFGT(0x9du, OperandType.BRANCH_OFFSET),
    IFLE(0x9eu, OperandType.BRANCH_OFFSET),
    IFNONNULL(0xc7u, OperandType.BRANCH_OFFSET),
    IFNULL(0xc6u, OperandType.BRANCH_OFFSET),
    IINC(0x84u, OperandType.INDEX_CONST),
    ILOAD(0x15u, OperandType.LOCAL_VARIABLE_INDEX),
    ILOAD_0(0x1au, OperandType.NONE),
    ILOAD_1(0x1bu, OperandType.NONE),
    ILOAD_2(0x1cu, OperandType.NONE),
    ILOAD_3(0x1du, OperandType.NONE),
    IMUL(0x68u, OperandType.NONE),
    INEG(0x74u, OperandType.NONE),
    INSTANCE_OF(0xc1u, OperandType.CONSTANT_POOL_INDEX),
    INVOKEDYNAMIC(0xbau, OperandType.CONSTANT_POOL_INDEX_THEN_TWO_ZEROES),
    INVOKEINTERFACE(0xb9u, OperandType.CONSTANT_POOL_INDEX_THEN_COUNT_THEN_ZERO),
    INVOKESPECIAL(0xb7u, OperandType.CONSTANT_POOL_INDEX),
    INVOKESTATIC(0xb8u, OperandType.CONSTANT_POOL_INDEX),
    INVOKEVIRTUAL(0xb6u, OperandType.CONSTANT_POOL_INDEX),
    IOR(0x80u, OperandType.NONE),
    IREM(0x70u, OperandType.NONE),
    IRETURN(0xacu, OperandType.NONE),
    ISHL(0x78u, OperandType.NONE),
    ISHR(0x7au, OperandType.NONE),
    ISTORE(0x36u, OperandType.LOCAL_VARIABLE_INDEX),
    ISTORE_0(0x3bu, OperandType.NONE),
    ISTORE_1(0x3cu, OperandType.NONE),
    ISTORE_2(0x3du, OperandType.NONE),
    ISTORE_3(0x3eu, OperandType.NONE),
    ISUB(0x64u, OperandType.NONE),
    IUSHR(0x7cu, OperandType.NONE),
    IXOR(0x82u, OperandType.NONE),
    JSR(0xa8u, OperandType.BRANCH_OFFSET),
    JSR_W(0xc9u, OperandType.BRANCH_OFFSET_WIDE),
    L2D(0x8au, OperandType.NONE),
    L2F(0x89u, OperandType.NONE),
    L2I(0x88u, OperandType.NONE),
    LADD(0x61u, OperandType.NONE),
    LALOAD(0x2fu, OperandType.NONE),
    LAND(0x7fu, OperandType.NONE),
    LASTORE(0x50u, OperandType.NONE),
    LCMP(0x94u, OperandType.NONE),
    LCONST_0(0x09u, OperandType.NONE),
    LCONST_1(0x0au, OperandType.NONE),
    LDC(0x12u, OperandType.CONSTANT_POOL_BYTE_SIZED_INDEX),
    LDC_W(0x13u, OperandType.CONSTANT_POOL_INDEX),
    LDC2_W(0x14u, OperandType.CONSTANT_POOL_INDEX),
    LDIV(0x6du, OperandType.NONE),
    LLOAD(0x16u, OperandType.LOCAL_VARIABLE_INDEX),
    LLOAD_0(0x1eu, OperandType.NONE),
    LLOAD_1(0x1fu, OperandType.NONE),
    LLOAD_2(0x20u, OperandType.NONE),
    LLOAD_3(0x21u, OperandType.NONE),
    LMUL(0x69u, OperandType.NONE),
    LNEG(0x75u, OperandType.NONE),
    LOOKUPSWITCH(0xabu, OperandType.LOOKUP_SWITCH),
    LOR(0x81u, OperandType.NONE),
    LREM(0x71u, OperandType.NONE),
    LRETURN(0xadu, OperandType.NONE),
    LSHL(0x79u, OperandType.NONE),
    LSHR(0x7bu, OperandType.NONE),
    LSTORE(0x37u, OperandType.LOCAL_VARIABLE_INDEX),
    LSTORE_0(0x3fu, OperandType.NONE),
    LSTORE_1(0x40u, OperandType.NONE),
    LSTORE_2(0x41u, OperandType.NONE),
    LSTORE_3(0x42u, OperandType.NONE),
    LSUB(0x65u, OperandType.NONE),
    LUSHR(0x7du, OperandType.NONE),
    LXOR(0x83u, OperandType.NONE),
    MONITORENTER(0xc2u, OperandType.NONE),
    MONITOREXIT(0xc3u, OperandType.NONE),
    MULTIANEWARRAY(0xc5u, OperandType.CONSTANT_POOL_INDEX_THEN_DIMENSIONS),
    NEW(0xbbu, OperandType.CONSTANT_POOL_INDEX),
    NEWARRAY(0xbcu, OperandType.ARRAY_TYPE),
    NOP(0x00u, OperandType.NONE),
    POP(0x57u, OperandType.NONE),
    POP2(0x58u, OperandType.NONE),
    PUTFIELD(0xb5u, OperandType.CONSTANT_POOL_INDEX),
    PUTSTATIC(0xb3u, OperandType.CONSTANT_POOL_INDEX),
    RET(0xa9u, OperandType.LOCAL_VARIABLE_INDEX),
    RETURN(0xb1u, OperandType.NONE),
    SALOAD(0x35u, OperandType.NONE),
    SASTORE(0x56u, OperandType.NONE),
    SIPUSH(0x11u, OperandType.SHORT),
    SWAP(0x5fu, OperandType.NONE),
    TABLESWITCH(0xaau, OperandType.TABLE_SWITCH),
    WIDE(0xc4u, OperandType.WIDE);
    val mnemonic:String get() = name.lowercase(getDefault())
    val formatted:String get()  = "(0x${ubyte.asHex()})$mnemonic"
    companion object {
        fun fromUByte(opcode: UByte): OpCode {
            return entries.firstOrNull { it.ubyte == opcode }
                ?: throw IllegalArgumentException("Unknown opcode: $opcode")
        }
    }
}
